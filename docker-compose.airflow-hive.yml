version: "3.8"
services:
  ######################################################
  # DATASET
  ######################################################
  dataset:
    build: ./docker/dataset
    image: dataength/dataset:skooldio
    restart: always
    container_name: dataset
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=breakfast
      - PGDATA=/var/lib/postgresql/data/pgdata

  ######################################################
  # DATABASE SERVICE
  ######################################################
  postgres:
    build: ./docker/postgres
    image: dataength/postgres:skooldio
    restart: always
    container_name: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow_db
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "airflow_db", "-U", "airflow"]
      timeout: 45s
      interval: 10s
      retries: 10

  airflow-metastore:
    image: postgres:11.4-alpine
    restart: always
    container_name: airflow-metastore
    volumes:
      - ./mnt/postgres:/var/lib/postgresql/data/pgdata
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow_db
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "airflow_db", "-U", "airflow"]
      timeout: 45s
      interval: 10s
      retries: 10

  ######################################################
  # HADOOP SERVICES
  ######################################################
  namenode:
    build: ./docker/hadoop/hadoop-namenode
    image: dataength/hadoop-namenode:skooldio
    restart: always
    container_name: namenode
    ports:
      - "32763:9870"
      - "9000:9000"
    # volumes:
    #   - ./mnt/hadoop/namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=hadoop_cluster
    healthcheck:
      test: ["CMD", "nc", "-z", "namenode", "9870"]
      timeout: 45s
      interval: 10s
      retries: 10

  datanode:
    build: ./docker/hadoop/hadoop-datanode
    image: dataength/hadoop-datanode:skooldio
    restart: always
    container_name: datanode
    ports:
      - "9866:9866"
    depends_on:
      - namenode
    # volumes:
    #   - ./mnt/hadoop/datanode:/hadoop/dfs/data
    environment:
      - SERVICE_PRECONDITION=namenode:9870
    healthcheck:
      test: ["CMD", "nc", "-z", "datanode", "9864"]
      timeout: 45s
      interval: 10s
      retries: 10

  # The services below are only useful if you want
  # to use YARN with HADOOP. Since we are going to use
  # only the HDFS, we can skip them.

  resourcemanager:
    build: ./docker/hadoop/hadoop-resourcemanager
    image: dataength/hadoop-resourcemanager:skooldio
    restart: always
    container_name: resourcemanager
    depends_on:
      - namenode
      - datanode
    environment:
      - SERVICE_PRECONDITION=namenode:9870 datanode:9864
    healthcheck:
      test: ["CMD", "nc", "-z", "resourcemanager", "8088"]
      timeout: 45s
      interval: 10s
      retries: 10

  nodemanager:
    build: ./docker/hadoop/hadoop-nodemanager
    image: dataength/hadoop-nodemanager:skooldio
    restart: always
    container_name: nodemanager
    depends_on:
      - namenode
      - datanode
      - resourcemanager
    environment:
      - SERVICE_PRECONDITION=namenode:9870 datanode:9864 resourcemanager:8088
    healthcheck:
      test: ["CMD", "nc", "-z", "nodemanager", "8042"]
      timeout: 45s
      interval: 10s
      retries: 10

  historyserver:
    build: ./docker/hadoop/hadoop-historyserver
    image: dataength/hadoop-historyserver:skooldio
    restart: always
    container_name: historyserver
    # volumes:
    #   - ./mnt/hadoop/historyserver:/hadoop/yarn/timeline
    depends_on:
      - namenode
      - datanode
      - resourcemanager
    environment:
      - SERVICE_PRECONDITION=namenode:9870 datanode:9864 resourcemanager:8088
    healthcheck:
      test: ["CMD", "nc", "-z", "historyserver", "8188"]
      timeout: 45s
      interval: 10s
      retries: 10

  hive-metastore:
    build: ./docker/hive/hive-metastore
    image: dataength/hive-metastore:skooldio
    restart: always
    container_name: hive-metastore
    depends_on:
      - namenode
      - datanode
      - postgres
    environment:
      - SERVICE_PRECONDITION=namenode:9870 datanode:9864 postgres:5432
    ports:
      - "32761:9083"
    healthcheck:
      test: ["CMD", "nc", "-z", "hive-metastore", "9083"]
      timeout: 45s
      interval: 10s
      retries: 10

  hive-server:
    build: ./docker/hive/hive-server
    image: dataength/hive-server:skooldio
    restart: always
    container_name: hive-server
    depends_on:
      - hive-metastore
    environment:
      - SERVICE_PRECONDITION=hive-metastore:9083
    ports:
      - "32760:10000"
      - "32759:10002"
    healthcheck:
      test: ["CMD", "nc", "-z", "hive-server", "10002"]
      timeout: 45s
      interval: 10s
      retries: 10

  hive-webhcat:
    build: ./docker/hive/hive-webhcat
    image: dataength/hive-webhcat:skooldio
    restart: always
    container_name: hive-webhcat
    depends_on:
      - hive-server
    environment:
      - SERVICE_PRECONDITION=hive-server:10000
    healthcheck:
      test: ["CMD", "nc", "-z", "hive-webhcat", "50111"]
      timeout: 45s
      interval: 10s
      retries: 10

  hue:
    build: ./docker/hue
    image: dataength/hue:skooldio
    restart: always
    container_name: hue
    depends_on:
      - hive-server
      - postgres
    ports:
      - "32762:8888"
    volumes:
      - ./mnt/hue/hue.ini:/usr/share/hue/desktop/conf/z-hue.ini
    environment:
      - SERVICE_PRECONDITION=hive-server:10000 postgres:5432
    healthcheck:
      test: ["CMD", "nc", "-z", "hue", "8888"]
      timeout: 45s
      interval: 10s
      retries: 10

  ######################################################
  # AIRFLOW
  ######################################################
  airflow:
    build: ./docker/airflow
    image: dataength/airflow:skooldio
    restart: always
    container_name: airflow
    depends_on:
      - airflow-metastore
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-metastore:5432/airflow_db
      AIRFLOW__CORE__FERNET_KEY: "EMFOyePzhgJ1OOznc75nT6tWlq4Bk5Un3J8jgOyverQ="
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "true"
    volumes:
      - ./mnt/airflow/airflow.cfg:/usr/local/airflow/airflow.cfg
      - ./mnt/airflow/dags:/usr/local/airflow/dags
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "nc", "-z", "airflow", "8080"]
      timeout: 45s
      interval: 10s
      retries: 10

  ######################################################
  # EMAIL SERVICE
  ######################################################
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

######################################################
# NETWORK
######################################################
networks:
  default:
    name: airflow-network
